"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _elements = require("payload/components/elements");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _slatereact = require("slate-react");
const _Relationship = /*#__PURE__*/ _interop_require_default(require("../../../icons/Relationship"));
const _Button = /*#__PURE__*/ _interop_require_default(require("../../Button"));
const _EnabledRelationshipsCondition = require("../../EnabledRelationshipsCondition");
const _injectVoid = require("../../injectVoid");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'relationship-rich-text-button';
const insertRelationship = (editor, { relationTo, value })=>{
    const text = {
        text: ' '
    };
    const relationship = {
        children: [
            text
        ],
        relationTo,
        type: 'relationship',
        value
    };
    (0, _injectVoid.injectVoidElement)(editor, relationship);
    _slatereact.ReactEditor.focus(editor);
};
const RelationshipButton = ({ enabledCollectionSlugs })=>{
    const { t } = (0, _reacti18next.useTranslation)('fields');
    const editor = (0, _slatereact.useSlate)();
    const [selectedCollectionSlug, setSelectedCollectionSlug] = (0, _react.useState)(()=>enabledCollectionSlugs[0]);
    const [ListDrawer, ListDrawerToggler, { closeDrawer, isDrawerOpen }] = (0, _elements.useListDrawer)({
        collectionSlugs: enabledCollectionSlugs,
        selectedCollection: selectedCollectionSlug
    });
    const onSelect = (0, _react.useCallback)(({ collectionConfig, docID })=>{
        insertRelationship(editor, {
            relationTo: collectionConfig.slug,
            value: {
                id: docID
            }
        });
        closeDrawer();
    }, [
        editor,
        closeDrawer
    ]);
    (0, _react.useEffect)(()=>{
        // always reset back to first option
        // TODO: this is not working, see the ListDrawer component
        setSelectedCollectionSlug(enabledCollectionSlugs[0]);
    }, [
        isDrawerOpen,
        enabledCollectionSlugs
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, /*#__PURE__*/ _react.default.createElement(ListDrawerToggler, null, /*#__PURE__*/ _react.default.createElement(_Button.default, {
        className: baseClass,
        el: "div",
        format: "relationship",
        onClick: ()=>{
        // do nothing
        },
        tooltip: t('addRelationship')
    }, /*#__PURE__*/ _react.default.createElement(_Relationship.default, null))), /*#__PURE__*/ _react.default.createElement(ListDrawer, {
        onSelect: onSelect
    }));
};
const _default = (props)=>{
    return /*#__PURE__*/ _react.default.createElement(_EnabledRelationshipsCondition.EnabledRelationshipsCondition, props, /*#__PURE__*/ _react.default.createElement(RelationshipButton, props));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy9yZWxhdGlvbnNoaXAvQnV0dG9uL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VMaXN0RHJhd2VyIH0gZnJvbSAncGF5bG9hZC9jb21wb25lbnRzL2VsZW1lbnRzJ1xuaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0J1xuaW1wb3J0IHsgUmVhY3RFZGl0b3IsIHVzZVNsYXRlIH0gZnJvbSAnc2xhdGUtcmVhY3QnXG5cbmltcG9ydCBSZWxhdGlvbnNoaXBJY29uIGZyb20gJy4uLy4uLy4uL2ljb25zL1JlbGF0aW9uc2hpcCdcbmltcG9ydCBFbGVtZW50QnV0dG9uIGZyb20gJy4uLy4uL0J1dHRvbidcbmltcG9ydCB7IEVuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uIH0gZnJvbSAnLi4vLi4vRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24nXG5pbXBvcnQgeyBpbmplY3RWb2lkRWxlbWVudCB9IGZyb20gJy4uLy4uL2luamVjdFZvaWQnXG5pbXBvcnQgJy4vaW5kZXguc2NzcydcblxuY29uc3QgYmFzZUNsYXNzID0gJ3JlbGF0aW9uc2hpcC1yaWNoLXRleHQtYnV0dG9uJ1xuXG5jb25zdCBpbnNlcnRSZWxhdGlvbnNoaXAgPSAoZWRpdG9yLCB7IHJlbGF0aW9uVG8sIHZhbHVlIH0pID0+IHtcbiAgY29uc3QgdGV4dCA9IHsgdGV4dDogJyAnIH1cblxuICBjb25zdCByZWxhdGlvbnNoaXAgPSB7XG4gICAgY2hpbGRyZW46IFt0ZXh0XSxcbiAgICByZWxhdGlvblRvLFxuICAgIHR5cGU6ICdyZWxhdGlvbnNoaXAnLFxuICAgIHZhbHVlLFxuICB9XG5cbiAgaW5qZWN0Vm9pZEVsZW1lbnQoZWRpdG9yLCByZWxhdGlvbnNoaXApXG5cbiAgUmVhY3RFZGl0b3IuZm9jdXMoZWRpdG9yKVxufVxuXG50eXBlIFByb3BzID0ge1xuICBlbmFibGVkQ29sbGVjdGlvblNsdWdzOiBzdHJpbmdbXVxuICBwYXRoOiBzdHJpbmdcbn1cbmNvbnN0IFJlbGF0aW9uc2hpcEJ1dHRvbjogUmVhY3QuRkM8UHJvcHM+ID0gKHsgZW5hYmxlZENvbGxlY3Rpb25TbHVncyB9KSA9PiB7XG4gIGNvbnN0IHsgdCB9ID0gdXNlVHJhbnNsYXRpb24oJ2ZpZWxkcycpXG4gIGNvbnN0IGVkaXRvciA9IHVzZVNsYXRlKClcbiAgY29uc3QgW3NlbGVjdGVkQ29sbGVjdGlvblNsdWcsIHNldFNlbGVjdGVkQ29sbGVjdGlvblNsdWddID0gdXNlU3RhdGUoXG4gICAgKCkgPT4gZW5hYmxlZENvbGxlY3Rpb25TbHVnc1swXSxcbiAgKVxuICBjb25zdCBbTGlzdERyYXdlciwgTGlzdERyYXdlclRvZ2dsZXIsIHsgY2xvc2VEcmF3ZXIsIGlzRHJhd2VyT3BlbiB9XSA9IHVzZUxpc3REcmF3ZXIoe1xuICAgIGNvbGxlY3Rpb25TbHVnczogZW5hYmxlZENvbGxlY3Rpb25TbHVncyxcbiAgICBzZWxlY3RlZENvbGxlY3Rpb246IHNlbGVjdGVkQ29sbGVjdGlvblNsdWcsXG4gIH0pXG5cbiAgY29uc3Qgb25TZWxlY3QgPSB1c2VDYWxsYmFjayhcbiAgICAoeyBjb2xsZWN0aW9uQ29uZmlnLCBkb2NJRCB9KSA9PiB7XG4gICAgICBpbnNlcnRSZWxhdGlvbnNoaXAoZWRpdG9yLCB7XG4gICAgICAgIHJlbGF0aW9uVG86IGNvbGxlY3Rpb25Db25maWcuc2x1ZyxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICBpZDogZG9jSUQsXG4gICAgICAgIH0sXG4gICAgICB9KVxuICAgICAgY2xvc2VEcmF3ZXIoKVxuICAgIH0sXG4gICAgW2VkaXRvciwgY2xvc2VEcmF3ZXJdLFxuICApXG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBhbHdheXMgcmVzZXQgYmFjayB0byBmaXJzdCBvcHRpb25cbiAgICAvLyBUT0RPOiB0aGlzIGlzIG5vdCB3b3JraW5nLCBzZWUgdGhlIExpc3REcmF3ZXIgY29tcG9uZW50XG4gICAgc2V0U2VsZWN0ZWRDb2xsZWN0aW9uU2x1ZyhlbmFibGVkQ29sbGVjdGlvblNsdWdzWzBdKVxuICB9LCBbaXNEcmF3ZXJPcGVuLCBlbmFibGVkQ29sbGVjdGlvblNsdWdzXSlcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxMaXN0RHJhd2VyVG9nZ2xlcj5cbiAgICAgICAgPEVsZW1lbnRCdXR0b25cbiAgICAgICAgICBjbGFzc05hbWU9e2Jhc2VDbGFzc31cbiAgICAgICAgICBlbD1cImRpdlwiXG4gICAgICAgICAgZm9ybWF0PVwicmVsYXRpb25zaGlwXCJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAvLyBkbyBub3RoaW5nXG4gICAgICAgICAgfX1cbiAgICAgICAgICB0b29sdGlwPXt0KCdhZGRSZWxhdGlvbnNoaXAnKX1cbiAgICAgICAgPlxuICAgICAgICAgIDxSZWxhdGlvbnNoaXBJY29uIC8+XG4gICAgICAgIDwvRWxlbWVudEJ1dHRvbj5cbiAgICAgIDwvTGlzdERyYXdlclRvZ2dsZXI+XG4gICAgICA8TGlzdERyYXdlciBvblNlbGVjdD17b25TZWxlY3R9IC8+XG4gICAgPC9GcmFnbWVudD5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCAocHJvcHM6IFByb3BzKTogUmVhY3QuUmVhY3ROb2RlID0+IHtcbiAgcmV0dXJuIChcbiAgICA8RW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24gey4uLnByb3BzfT5cbiAgICAgIDxSZWxhdGlvbnNoaXBCdXR0b24gey4uLnByb3BzfSAvPlxuICAgIDwvRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJiYXNlQ2xhc3MiLCJpbnNlcnRSZWxhdGlvbnNoaXAiLCJlZGl0b3IiLCJyZWxhdGlvblRvIiwidmFsdWUiLCJ0ZXh0IiwicmVsYXRpb25zaGlwIiwiY2hpbGRyZW4iLCJ0eXBlIiwiaW5qZWN0Vm9pZEVsZW1lbnQiLCJSZWFjdEVkaXRvciIsImZvY3VzIiwiUmVsYXRpb25zaGlwQnV0dG9uIiwiZW5hYmxlZENvbGxlY3Rpb25TbHVncyIsInQiLCJ1c2VUcmFuc2xhdGlvbiIsInVzZVNsYXRlIiwic2VsZWN0ZWRDb2xsZWN0aW9uU2x1ZyIsInNldFNlbGVjdGVkQ29sbGVjdGlvblNsdWciLCJ1c2VTdGF0ZSIsIkxpc3REcmF3ZXIiLCJMaXN0RHJhd2VyVG9nZ2xlciIsImNsb3NlRHJhd2VyIiwiaXNEcmF3ZXJPcGVuIiwidXNlTGlzdERyYXdlciIsImNvbGxlY3Rpb25TbHVncyIsInNlbGVjdGVkQ29sbGVjdGlvbiIsIm9uU2VsZWN0IiwidXNlQ2FsbGJhY2siLCJjb2xsZWN0aW9uQ29uZmlnIiwiZG9jSUQiLCJzbHVnIiwiaWQiLCJ1c2VFZmZlY3QiLCJGcmFnbWVudCIsIkVsZW1lbnRCdXR0b24iLCJjbGFzc05hbWUiLCJlbCIsImZvcm1hdCIsIm9uQ2xpY2siLCJ0b29sdGlwIiwiUmVsYXRpb25zaGlwSWNvbiIsInByb3BzIiwiRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7K0JBa0ZBOzs7ZUFBQTs7OzBCQWxGOEI7K0RBQ29DOzhCQUNuQzs0QkFDTztxRUFFVDsrREFDSDsrQ0FDb0I7NEJBQ1o7UUFDM0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVQLE1BQU1BLFlBQVk7QUFFbEIsTUFBTUMscUJBQXFCLENBQUNDLFFBQVEsRUFBRUMsVUFBVSxFQUFFQyxLQUFLLEVBQUU7SUFDdkQsTUFBTUMsT0FBTztRQUFFQSxNQUFNO0lBQUk7SUFFekIsTUFBTUMsZUFBZTtRQUNuQkMsVUFBVTtZQUFDRjtTQUFLO1FBQ2hCRjtRQUNBSyxNQUFNO1FBQ05KO0lBQ0Y7SUFFQUssSUFBQUEsNkJBQWlCLEVBQUNQLFFBQVFJO0lBRTFCSSx1QkFBVyxDQUFDQyxLQUFLLENBQUNUO0FBQ3BCO0FBTUEsTUFBTVUscUJBQXNDLENBQUMsRUFBRUMsc0JBQXNCLEVBQUU7SUFDckUsTUFBTSxFQUFFQyxDQUFDLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztJQUM3QixNQUFNYixTQUFTYyxJQUFBQSxvQkFBUTtJQUN2QixNQUFNLENBQUNDLHdCQUF3QkMsMEJBQTBCLEdBQUdDLElBQUFBLGVBQVEsRUFDbEUsSUFBTU4sc0JBQXNCLENBQUMsRUFBRTtJQUVqQyxNQUFNLENBQUNPLFlBQVlDLG1CQUFtQixFQUFFQyxXQUFXLEVBQUVDLFlBQVksRUFBRSxDQUFDLEdBQUdDLElBQUFBLHVCQUFhLEVBQUM7UUFDbkZDLGlCQUFpQlo7UUFDakJhLG9CQUFvQlQ7SUFDdEI7SUFFQSxNQUFNVSxXQUFXQyxJQUFBQSxrQkFBVyxFQUMxQixDQUFDLEVBQUVDLGdCQUFnQixFQUFFQyxLQUFLLEVBQUU7UUFDMUI3QixtQkFBbUJDLFFBQVE7WUFDekJDLFlBQVkwQixpQkFBaUJFLElBQUk7WUFDakMzQixPQUFPO2dCQUNMNEIsSUFBSUY7WUFDTjtRQUNGO1FBQ0FSO0lBQ0YsR0FDQTtRQUFDcEI7UUFBUW9CO0tBQVk7SUFHdkJXLElBQUFBLGdCQUFTLEVBQUM7UUFDUixvQ0FBb0M7UUFDcEMsMERBQTBEO1FBQzFEZiwwQkFBMEJMLHNCQUFzQixDQUFDLEVBQUU7SUFDckQsR0FBRztRQUFDVTtRQUFjVjtLQUF1QjtJQUV6QyxxQkFDRSw2QkFBQ3FCLGVBQVEsc0JBQ1AsNkJBQUNiLHVDQUNDLDZCQUFDYyxlQUFhO1FBQ1pDLFdBQVdwQztRQUNYcUMsSUFBRztRQUNIQyxRQUFPO1FBQ1BDLFNBQVM7UUFDUCxhQUFhO1FBQ2Y7UUFDQUMsU0FBUzFCLEVBQUU7cUJBRVgsNkJBQUMyQixxQkFBZ0IseUJBR3JCLDZCQUFDckI7UUFBV08sVUFBVUE7O0FBRzVCO01BRUEsV0FBZSxDQUFDZTtJQUNkLHFCQUNFLDZCQUFDQyw0REFBNkIsRUFBS0QscUJBQ2pDLDZCQUFDOUIsb0JBQXVCOEI7QUFHOUIifQ==