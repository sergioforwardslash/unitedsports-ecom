"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const _elements = require("payload/components/elements");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _reacti18next = require("react-i18next");
const _slatereact = require("slate-react");
const _Upload = /*#__PURE__*/ _interop_require_default(require("../../../icons/Upload"));
const _Button = /*#__PURE__*/ _interop_require_default(require("../../Button"));
const _EnabledRelationshipsCondition = require("../../EnabledRelationshipsCondition");
const _injectVoid = require("../../injectVoid");
require("./index.scss");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const baseClass = 'upload-rich-text-button';
const insertUpload = (editor, { relationTo, value })=>{
    const text = {
        text: ' '
    };
    const upload = {
        children: [
            text
        ],
        relationTo,
        type: 'upload',
        value
    };
    (0, _injectVoid.injectVoidElement)(editor, upload);
    _slatereact.ReactEditor.focus(editor);
};
const UploadButton = ({ enabledCollectionSlugs })=>{
    const { t } = (0, _reacti18next.useTranslation)([
        'upload',
        'general'
    ]);
    const editor = (0, _slatereact.useSlate)();
    const [ListDrawer, ListDrawerToggler, { closeDrawer }] = (0, _elements.useListDrawer)({
        collectionSlugs: enabledCollectionSlugs,
        uploads: true
    });
    const onSelect = (0, _react.useCallback)(({ collectionConfig, docID })=>{
        insertUpload(editor, {
            relationTo: collectionConfig.slug,
            value: {
                id: docID
            }
        });
        closeDrawer();
    }, [
        editor,
        closeDrawer
    ]);
    return /*#__PURE__*/ _react.default.createElement(_react.Fragment, null, /*#__PURE__*/ _react.default.createElement(ListDrawerToggler, null, /*#__PURE__*/ _react.default.createElement(_Button.default, {
        className: baseClass,
        el: "div",
        format: "upload",
        onClick: ()=>{
        // do nothing
        },
        tooltip: t('fields:addUpload')
    }, /*#__PURE__*/ _react.default.createElement(_Upload.default, null))), /*#__PURE__*/ _react.default.createElement(ListDrawer, {
        onSelect: onSelect
    }));
};
const _default = (props)=>{
    return /*#__PURE__*/ _react.default.createElement(_EnabledRelationshipsCondition.EnabledRelationshipsCondition, {
        ...props,
        uploads: true
    }, /*#__PURE__*/ _react.default.createElement(UploadButton, props));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy91cGxvYWQvQnV0dG9uL2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VMaXN0RHJhd2VyIH0gZnJvbSAncGF5bG9hZC9jb21wb25lbnRzL2VsZW1lbnRzJ1xuaW1wb3J0IFJlYWN0LCB7IEZyYWdtZW50LCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgdXNlVHJhbnNsYXRpb24gfSBmcm9tICdyZWFjdC1pMThuZXh0J1xuaW1wb3J0IHsgUmVhY3RFZGl0b3IsIHVzZVNsYXRlIH0gZnJvbSAnc2xhdGUtcmVhY3QnXG5cbmltcG9ydCBVcGxvYWRJY29uIGZyb20gJy4uLy4uLy4uL2ljb25zL1VwbG9hZCdcbmltcG9ydCBFbGVtZW50QnV0dG9uIGZyb20gJy4uLy4uL0J1dHRvbidcbmltcG9ydCB7IEVuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uIH0gZnJvbSAnLi4vLi4vRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24nXG5pbXBvcnQgeyBpbmplY3RWb2lkRWxlbWVudCB9IGZyb20gJy4uLy4uL2luamVjdFZvaWQnXG5pbXBvcnQgJy4vaW5kZXguc2NzcydcblxuY29uc3QgYmFzZUNsYXNzID0gJ3VwbG9hZC1yaWNoLXRleHQtYnV0dG9uJ1xuXG5jb25zdCBpbnNlcnRVcGxvYWQgPSAoZWRpdG9yLCB7IHJlbGF0aW9uVG8sIHZhbHVlIH0pID0+IHtcbiAgY29uc3QgdGV4dCA9IHsgdGV4dDogJyAnIH1cblxuICBjb25zdCB1cGxvYWQgPSB7XG4gICAgY2hpbGRyZW46IFt0ZXh0XSxcbiAgICByZWxhdGlvblRvLFxuICAgIHR5cGU6ICd1cGxvYWQnLFxuICAgIHZhbHVlLFxuICB9XG5cbiAgaW5qZWN0Vm9pZEVsZW1lbnQoZWRpdG9yLCB1cGxvYWQpXG5cbiAgUmVhY3RFZGl0b3IuZm9jdXMoZWRpdG9yKVxufVxuXG50eXBlIEJ1dHRvblByb3BzID0ge1xuICBlbmFibGVkQ29sbGVjdGlvblNsdWdzOiBzdHJpbmdbXVxuICBwYXRoOiBzdHJpbmdcbn1cblxuY29uc3QgVXBsb2FkQnV0dG9uOiBSZWFjdC5GQzxCdXR0b25Qcm9wcz4gPSAoeyBlbmFibGVkQ29sbGVjdGlvblNsdWdzIH0pID0+IHtcbiAgY29uc3QgeyB0IH0gPSB1c2VUcmFuc2xhdGlvbihbJ3VwbG9hZCcsICdnZW5lcmFsJ10pXG4gIGNvbnN0IGVkaXRvciA9IHVzZVNsYXRlKClcblxuICBjb25zdCBbTGlzdERyYXdlciwgTGlzdERyYXdlclRvZ2dsZXIsIHsgY2xvc2VEcmF3ZXIgfV0gPSB1c2VMaXN0RHJhd2VyKHtcbiAgICBjb2xsZWN0aW9uU2x1Z3M6IGVuYWJsZWRDb2xsZWN0aW9uU2x1Z3MsXG4gICAgdXBsb2FkczogdHJ1ZSxcbiAgfSlcblxuICBjb25zdCBvblNlbGVjdCA9IHVzZUNhbGxiYWNrKFxuICAgICh7IGNvbGxlY3Rpb25Db25maWcsIGRvY0lEIH0pID0+IHtcbiAgICAgIGluc2VydFVwbG9hZChlZGl0b3IsIHtcbiAgICAgICAgcmVsYXRpb25UbzogY29sbGVjdGlvbkNvbmZpZy5zbHVnLFxuICAgICAgICB2YWx1ZToge1xuICAgICAgICAgIGlkOiBkb2NJRCxcbiAgICAgICAgfSxcbiAgICAgIH0pXG4gICAgICBjbG9zZURyYXdlcigpXG4gICAgfSxcbiAgICBbZWRpdG9yLCBjbG9zZURyYXdlcl0sXG4gIClcblxuICByZXR1cm4gKFxuICAgIDxGcmFnbWVudD5cbiAgICAgIDxMaXN0RHJhd2VyVG9nZ2xlcj5cbiAgICAgICAgPEVsZW1lbnRCdXR0b25cbiAgICAgICAgICBjbGFzc05hbWU9e2Jhc2VDbGFzc31cbiAgICAgICAgICBlbD1cImRpdlwiXG4gICAgICAgICAgZm9ybWF0PVwidXBsb2FkXCJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAvLyBkbyBub3RoaW5nXG4gICAgICAgICAgfX1cbiAgICAgICAgICB0b29sdGlwPXt0KCdmaWVsZHM6YWRkVXBsb2FkJyl9XG4gICAgICAgID5cbiAgICAgICAgICA8VXBsb2FkSWNvbiAvPlxuICAgICAgICA8L0VsZW1lbnRCdXR0b24+XG4gICAgICA8L0xpc3REcmF3ZXJUb2dnbGVyPlxuICAgICAgPExpc3REcmF3ZXIgb25TZWxlY3Q9e29uU2VsZWN0fSAvPlxuICAgIDwvRnJhZ21lbnQ+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgKHByb3BzOiBCdXR0b25Qcm9wcyk6IFJlYWN0LlJlYWN0Tm9kZSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEVuYWJsZWRSZWxhdGlvbnNoaXBzQ29uZGl0aW9uIHsuLi5wcm9wc30gdXBsb2Fkcz5cbiAgICAgIDxVcGxvYWRCdXR0b24gey4uLnByb3BzfSAvPlxuICAgIDwvRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJiYXNlQ2xhc3MiLCJpbnNlcnRVcGxvYWQiLCJlZGl0b3IiLCJyZWxhdGlvblRvIiwidmFsdWUiLCJ0ZXh0IiwidXBsb2FkIiwiY2hpbGRyZW4iLCJ0eXBlIiwiaW5qZWN0Vm9pZEVsZW1lbnQiLCJSZWFjdEVkaXRvciIsImZvY3VzIiwiVXBsb2FkQnV0dG9uIiwiZW5hYmxlZENvbGxlY3Rpb25TbHVncyIsInQiLCJ1c2VUcmFuc2xhdGlvbiIsInVzZVNsYXRlIiwiTGlzdERyYXdlciIsIkxpc3REcmF3ZXJUb2dnbGVyIiwiY2xvc2VEcmF3ZXIiLCJ1c2VMaXN0RHJhd2VyIiwiY29sbGVjdGlvblNsdWdzIiwidXBsb2FkcyIsIm9uU2VsZWN0IiwidXNlQ2FsbGJhY2siLCJjb2xsZWN0aW9uQ29uZmlnIiwiZG9jSUQiLCJzbHVnIiwiaWQiLCJGcmFnbWVudCIsIkVsZW1lbnRCdXR0b24iLCJjbGFzc05hbWUiLCJlbCIsImZvcm1hdCIsIm9uQ2xpY2siLCJ0b29sdGlwIiwiVXBsb2FkSWNvbiIsInByb3BzIiwiRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24iXSwibWFwcGluZ3MiOiI7Ozs7K0JBMkVBOzs7ZUFBQTs7OzBCQTNFOEI7K0RBQ2U7OEJBQ2Q7NEJBQ087K0RBRWY7K0RBQ0c7K0NBQ29COzRCQUNaO1FBQzNCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFUCxNQUFNQSxZQUFZO0FBRWxCLE1BQU1DLGVBQWUsQ0FBQ0MsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLEtBQUssRUFBRTtJQUNqRCxNQUFNQyxPQUFPO1FBQUVBLE1BQU07SUFBSTtJQUV6QixNQUFNQyxTQUFTO1FBQ2JDLFVBQVU7WUFBQ0Y7U0FBSztRQUNoQkY7UUFDQUssTUFBTTtRQUNOSjtJQUNGO0lBRUFLLElBQUFBLDZCQUFpQixFQUFDUCxRQUFRSTtJQUUxQkksdUJBQVcsQ0FBQ0MsS0FBSyxDQUFDVDtBQUNwQjtBQU9BLE1BQU1VLGVBQXNDLENBQUMsRUFBRUMsc0JBQXNCLEVBQUU7SUFDckUsTUFBTSxFQUFFQyxDQUFDLEVBQUUsR0FBR0MsSUFBQUEsNEJBQWMsRUFBQztRQUFDO1FBQVU7S0FBVTtJQUNsRCxNQUFNYixTQUFTYyxJQUFBQSxvQkFBUTtJQUV2QixNQUFNLENBQUNDLFlBQVlDLG1CQUFtQixFQUFFQyxXQUFXLEVBQUUsQ0FBQyxHQUFHQyxJQUFBQSx1QkFBYSxFQUFDO1FBQ3JFQyxpQkFBaUJSO1FBQ2pCUyxTQUFTO0lBQ1g7SUFFQSxNQUFNQyxXQUFXQyxJQUFBQSxrQkFBVyxFQUMxQixDQUFDLEVBQUVDLGdCQUFnQixFQUFFQyxLQUFLLEVBQUU7UUFDMUJ6QixhQUFhQyxRQUFRO1lBQ25CQyxZQUFZc0IsaUJBQWlCRSxJQUFJO1lBQ2pDdkIsT0FBTztnQkFDTHdCLElBQUlGO1lBQ047UUFDRjtRQUNBUDtJQUNGLEdBQ0E7UUFBQ2pCO1FBQVFpQjtLQUFZO0lBR3ZCLHFCQUNFLDZCQUFDVSxlQUFRLHNCQUNQLDZCQUFDWCx1Q0FDQyw2QkFBQ1ksZUFBYTtRQUNaQyxXQUFXL0I7UUFDWGdDLElBQUc7UUFDSEMsUUFBTztRQUNQQyxTQUFTO1FBQ1AsYUFBYTtRQUNmO1FBQ0FDLFNBQVNyQixFQUFFO3FCQUVYLDZCQUFDc0IsZUFBVSx5QkFHZiw2QkFBQ25CO1FBQVdNLFVBQVVBOztBQUc1QjtNQUVBLFdBQWUsQ0FBQ2M7SUFDZCxxQkFDRSw2QkFBQ0MsNERBQTZCO1FBQUUsR0FBR0QsS0FBSztRQUFFZixTQUFBQTtxQkFDeEMsNkJBQUNWLGNBQWlCeUI7QUFHeEIifQ==