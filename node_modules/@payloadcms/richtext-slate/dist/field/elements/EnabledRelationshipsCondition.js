"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EnabledRelationshipsCondition", {
    enumerable: true,
    get: function() {
        return EnabledRelationshipsCondition;
    }
});
const _utilities = require("payload/components/utilities");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
const filterRichTextCollections = (collections, options)=>{
    return collections.filter(({ admin: { enableRichTextRelationship }, upload })=>{
        if (options?.uploads) {
            return enableRichTextRelationship && Boolean(upload) === true;
        }
        return upload ? false : enableRichTextRelationship;
    });
};
const EnabledRelationshipsCondition = (props)=>{
    const { children, uploads = false, ...rest } = props;
    const { collections } = (0, _utilities.useConfig)();
    const [enabledCollectionSlugs] = _react.useState(()=>filterRichTextCollections(collections, {
            uploads
        }).map(({ slug })=>slug));
    if (!enabledCollectionSlugs.length) {
        return null;
    }
    return /*#__PURE__*/ _react.cloneElement(children, {
        ...rest,
        enabledCollectionSlugs
    });
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9maWVsZC9lbGVtZW50cy9FbmFibGVkUmVsYXRpb25zaGlwc0NvbmRpdGlvbi50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBTYW5pdGl6ZWRDb2xsZWN0aW9uQ29uZmlnIH0gZnJvbSAncGF5bG9hZC90eXBlcydcblxuaW1wb3J0IHsgdXNlQ29uZmlnIH0gZnJvbSAncGF5bG9hZC9jb21wb25lbnRzL3V0aWxpdGllcydcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0J1xuXG50eXBlIG9wdGlvbnMgPSB7IHVwbG9hZHM6IGJvb2xlYW4gfVxuXG50eXBlIEZpbHRlcmVkQ29sbGVjdGlvbnNUID0gKFxuICBjb2xsZWN0aW9uczogU2FuaXRpemVkQ29sbGVjdGlvbkNvbmZpZ1tdLFxuICBvcHRpb25zPzogb3B0aW9ucyxcbikgPT4gU2FuaXRpemVkQ29sbGVjdGlvbkNvbmZpZ1tdXG5jb25zdCBmaWx0ZXJSaWNoVGV4dENvbGxlY3Rpb25zOiBGaWx0ZXJlZENvbGxlY3Rpb25zVCA9IChjb2xsZWN0aW9ucywgb3B0aW9ucykgPT4ge1xuICByZXR1cm4gY29sbGVjdGlvbnMuZmlsdGVyKCh7IGFkbWluOiB7IGVuYWJsZVJpY2hUZXh0UmVsYXRpb25zaGlwIH0sIHVwbG9hZCB9KSA9PiB7XG4gICAgaWYgKG9wdGlvbnM/LnVwbG9hZHMpIHtcbiAgICAgIHJldHVybiBlbmFibGVSaWNoVGV4dFJlbGF0aW9uc2hpcCAmJiBCb29sZWFuKHVwbG9hZCkgPT09IHRydWVcbiAgICB9XG5cbiAgICByZXR1cm4gdXBsb2FkID8gZmFsc2UgOiBlbmFibGVSaWNoVGV4dFJlbGF0aW9uc2hpcFxuICB9KVxufVxuXG5leHBvcnQgY29uc3QgRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb246IFJlYWN0LkZDPGFueT4gPSAocHJvcHMpID0+IHtcbiAgY29uc3QgeyBjaGlsZHJlbiwgdXBsb2FkcyA9IGZhbHNlLCAuLi5yZXN0IH0gPSBwcm9wc1xuICBjb25zdCB7IGNvbGxlY3Rpb25zIH0gPSB1c2VDb25maWcoKVxuICBjb25zdCBbZW5hYmxlZENvbGxlY3Rpb25TbHVnc10gPSBSZWFjdC51c2VTdGF0ZSgoKSA9PlxuICAgIGZpbHRlclJpY2hUZXh0Q29sbGVjdGlvbnMoY29sbGVjdGlvbnMsIHsgdXBsb2FkcyB9KS5tYXAoKHsgc2x1ZyB9KSA9PiBzbHVnKSxcbiAgKVxuXG4gIGlmICghZW5hYmxlZENvbGxlY3Rpb25TbHVncy5sZW5ndGgpIHtcbiAgICByZXR1cm4gbnVsbFxuICB9XG5cbiAgcmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZHJlbiwgeyAuLi5yZXN0LCBlbmFibGVkQ29sbGVjdGlvblNsdWdzIH0pXG59XG4iXSwibmFtZXMiOlsiRW5hYmxlZFJlbGF0aW9uc2hpcHNDb25kaXRpb24iLCJmaWx0ZXJSaWNoVGV4dENvbGxlY3Rpb25zIiwiY29sbGVjdGlvbnMiLCJvcHRpb25zIiwiZmlsdGVyIiwiYWRtaW4iLCJlbmFibGVSaWNoVGV4dFJlbGF0aW9uc2hpcCIsInVwbG9hZCIsInVwbG9hZHMiLCJCb29sZWFuIiwicHJvcHMiLCJjaGlsZHJlbiIsInJlc3QiLCJ1c2VDb25maWciLCJlbmFibGVkQ29sbGVjdGlvblNsdWdzIiwiUmVhY3QiLCJ1c2VTdGF0ZSIsIm1hcCIsInNsdWciLCJsZW5ndGgiLCJjbG9uZUVsZW1lbnQiXSwibWFwcGluZ3MiOiI7Ozs7K0JBcUJhQTs7O2VBQUFBOzs7MkJBbkJhOytEQUNIOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBUXZCLE1BQU1DLDRCQUFrRCxDQUFDQyxhQUFhQztJQUNwRSxPQUFPRCxZQUFZRSxNQUFNLENBQUMsQ0FBQyxFQUFFQyxPQUFPLEVBQUVDLDBCQUEwQixFQUFFLEVBQUVDLE1BQU0sRUFBRTtRQUMxRSxJQUFJSixTQUFTSyxTQUFTO1lBQ3BCLE9BQU9GLDhCQUE4QkcsUUFBUUYsWUFBWTtRQUMzRDtRQUVBLE9BQU9BLFNBQVMsUUFBUUQ7SUFDMUI7QUFDRjtBQUVPLE1BQU1OLGdDQUErQyxDQUFDVTtJQUMzRCxNQUFNLEVBQUVDLFFBQVEsRUFBRUgsVUFBVSxLQUFLLEVBQUUsR0FBR0ksTUFBTSxHQUFHRjtJQUMvQyxNQUFNLEVBQUVSLFdBQVcsRUFBRSxHQUFHVyxJQUFBQSxvQkFBUztJQUNqQyxNQUFNLENBQUNDLHVCQUF1QixHQUFHQyxPQUFNQyxRQUFRLENBQUMsSUFDOUNmLDBCQUEwQkMsYUFBYTtZQUFFTTtRQUFRLEdBQUdTLEdBQUcsQ0FBQyxDQUFDLEVBQUVDLElBQUksRUFBRSxHQUFLQTtJQUd4RSxJQUFJLENBQUNKLHVCQUF1QkssTUFBTSxFQUFFO1FBQ2xDLE9BQU87SUFDVDtJQUVBLHFCQUFPSixPQUFNSyxZQUFZLENBQUNULFVBQVU7UUFBRSxHQUFHQyxJQUFJO1FBQUVFO0lBQXVCO0FBQ3hFIn0=