"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getStorageClient", {
    enumerable: true,
    get: function() {
        return getStorageClient;
    }
});
const _clientcognitoidentity = require("@aws-sdk/client-cognito-identity");
const _clients3 = /*#__PURE__*/ _interop_require_wildcard(require("@aws-sdk/client-s3"));
const _credentialproviders = require("@aws-sdk/credential-providers");
const _authAsCognitoUser = require("./authAsCognitoUser");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {};
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
let storageClient = null;
let session = null;
let identityID;
const getStorageClient = async ()=>{
    if (storageClient && session?.isValid()) {
        return {
            identityID,
            storageClient
        };
    }
    session = await (0, _authAsCognitoUser.authAsCognitoUser)(process.env.PAYLOAD_CLOUD_PROJECT_ID, process.env.PAYLOAD_CLOUD_COGNITO_PASSWORD);
    const cognitoIdentity = new _clientcognitoidentity.CognitoIdentityClient({
        credentials: (0, _credentialproviders.fromCognitoIdentityPool)({
            clientConfig: {
                region: 'us-east-1'
            },
            identityPoolId: process.env.PAYLOAD_CLOUD_COGNITO_IDENTITY_POOL_ID,
            logins: {
                [`cognito-idp.us-east-1.amazonaws.com/${process.env.PAYLOAD_CLOUD_COGNITO_USER_POOL_ID}`]: session.getIdToken().getJwtToken()
            }
        })
    });
    const credentials = await cognitoIdentity.config.credentials();
    // @ts-expect-error
    identityID = credentials.identityId;
    storageClient = new _clients3.S3({
        credentials,
        region: process.env.PAYLOAD_CLOUD_BUCKET_REGION
    });
    return {
        identityID,
        storageClient
    };
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZ2V0U3RvcmFnZUNsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IENvZ25pdG9Vc2VyU2Vzc2lvbiB9IGZyb20gJ2FtYXpvbi1jb2duaXRvLWlkZW50aXR5LWpzJ1xuXG5pbXBvcnQgeyBDb2duaXRvSWRlbnRpdHlDbGllbnQgfSBmcm9tICdAYXdzLXNkay9jbGllbnQtY29nbml0by1pZGVudGl0eSdcbmltcG9ydCAqIGFzIEFXUyBmcm9tICdAYXdzLXNkay9jbGllbnQtczMnXG5pbXBvcnQgeyBmcm9tQ29nbml0b0lkZW50aXR5UG9vbCB9IGZyb20gJ0Bhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXJzJ1xuXG5pbXBvcnQgeyBhdXRoQXNDb2duaXRvVXNlciB9IGZyb20gJy4vYXV0aEFzQ29nbml0b1VzZXInXG5cbmV4cG9ydCB0eXBlIEdldFN0b3JhZ2VDbGllbnQgPSAoKSA9PiBQcm9taXNlPHtcbiAgaWRlbnRpdHlJRDogc3RyaW5nXG4gIHN0b3JhZ2VDbGllbnQ6IEFXUy5TM1xufT5cblxubGV0IHN0b3JhZ2VDbGllbnQ6IEFXUy5TMyB8IG51bGwgPSBudWxsXG5sZXQgc2Vzc2lvbjogQ29nbml0b1VzZXJTZXNzaW9uIHwgbnVsbCA9IG51bGxcbmxldCBpZGVudGl0eUlEOiBzdHJpbmdcblxuZXhwb3J0IGNvbnN0IGdldFN0b3JhZ2VDbGllbnQ6IEdldFN0b3JhZ2VDbGllbnQgPSBhc3luYyAoKSA9PiB7XG4gIGlmIChzdG9yYWdlQ2xpZW50ICYmIHNlc3Npb24/LmlzVmFsaWQoKSkge1xuICAgIHJldHVybiB7XG4gICAgICBpZGVudGl0eUlELFxuICAgICAgc3RvcmFnZUNsaWVudCxcbiAgICB9XG4gIH1cblxuICBzZXNzaW9uID0gYXdhaXQgYXV0aEFzQ29nbml0b1VzZXIoXG4gICAgcHJvY2Vzcy5lbnYuUEFZTE9BRF9DTE9VRF9QUk9KRUNUX0lEIGFzIHN0cmluZyxcbiAgICBwcm9jZXNzLmVudi5QQVlMT0FEX0NMT1VEX0NPR05JVE9fUEFTU1dPUkQgYXMgc3RyaW5nLFxuICApXG5cbiAgY29uc3QgY29nbml0b0lkZW50aXR5ID0gbmV3IENvZ25pdG9JZGVudGl0eUNsaWVudCh7XG4gICAgY3JlZGVudGlhbHM6IGZyb21Db2duaXRvSWRlbnRpdHlQb29sKHtcbiAgICAgIGNsaWVudENvbmZpZzoge1xuICAgICAgICByZWdpb246ICd1cy1lYXN0LTEnLFxuICAgICAgfSxcbiAgICAgIGlkZW50aXR5UG9vbElkOiBwcm9jZXNzLmVudi5QQVlMT0FEX0NMT1VEX0NPR05JVE9fSURFTlRJVFlfUE9PTF9JRCBhcyBzdHJpbmcsXG4gICAgICBsb2dpbnM6IHtcbiAgICAgICAgW2Bjb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbS8ke3Byb2Nlc3MuZW52LlBBWUxPQURfQ0xPVURfQ09HTklUT19VU0VSX1BPT0xfSUR9YF06XG4gICAgICAgICAgc2Vzc2lvbi5nZXRJZFRva2VuKCkuZ2V0Snd0VG9rZW4oKSxcbiAgICAgIH0sXG4gICAgfSksXG4gIH0pXG5cbiAgY29uc3QgY3JlZGVudGlhbHMgPSBhd2FpdCBjb2duaXRvSWRlbnRpdHkuY29uZmlnLmNyZWRlbnRpYWxzKClcblxuICAvLyBAdHMtZXhwZWN0LWVycm9yXG4gIGlkZW50aXR5SUQgPSBjcmVkZW50aWFscy5pZGVudGl0eUlkXG5cbiAgc3RvcmFnZUNsaWVudCA9IG5ldyBBV1MuUzMoe1xuICAgIGNyZWRlbnRpYWxzLFxuICAgIHJlZ2lvbjogcHJvY2Vzcy5lbnYuUEFZTE9BRF9DTE9VRF9CVUNLRVRfUkVHSU9OLFxuICB9KVxuXG4gIHJldHVybiB7XG4gICAgaWRlbnRpdHlJRCxcbiAgICBzdG9yYWdlQ2xpZW50LFxuICB9XG59XG4iXSwibmFtZXMiOlsiZ2V0U3RvcmFnZUNsaWVudCIsInN0b3JhZ2VDbGllbnQiLCJzZXNzaW9uIiwiaWRlbnRpdHlJRCIsImlzVmFsaWQiLCJhdXRoQXNDb2duaXRvVXNlciIsInByb2Nlc3MiLCJlbnYiLCJQQVlMT0FEX0NMT1VEX1BST0pFQ1RfSUQiLCJQQVlMT0FEX0NMT1VEX0NPR05JVE9fUEFTU1dPUkQiLCJjb2duaXRvSWRlbnRpdHkiLCJDb2duaXRvSWRlbnRpdHlDbGllbnQiLCJjcmVkZW50aWFscyIsImZyb21Db2duaXRvSWRlbnRpdHlQb29sIiwiY2xpZW50Q29uZmlnIiwicmVnaW9uIiwiaWRlbnRpdHlQb29sSWQiLCJQQVlMT0FEX0NMT1VEX0NPR05JVE9fSURFTlRJVFlfUE9PTF9JRCIsImxvZ2lucyIsIlBBWUxPQURfQ0xPVURfQ09HTklUT19VU0VSX1BPT0xfSUQiLCJnZXRJZFRva2VuIiwiZ2V0Snd0VG9rZW4iLCJjb25maWciLCJpZGVudGl0eUlkIiwiQVdTIiwiUzMiLCJQQVlMT0FEX0NMT1VEX0JVQ0tFVF9SRUdJT04iXSwibWFwcGluZ3MiOiI7Ozs7K0JBaUJhQTs7O2VBQUFBOzs7dUNBZnlCO2tFQUNqQjtxQ0FDbUI7bUNBRU47Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPbEMsSUFBSUMsZ0JBQStCO0FBQ25DLElBQUlDLFVBQXFDO0FBQ3pDLElBQUlDO0FBRUcsTUFBTUgsbUJBQXFDO0lBQ2hELElBQUlDLGlCQUFpQkMsU0FBU0UsV0FBVztRQUN2QyxPQUFPO1lBQ0xEO1lBQ0FGO1FBQ0Y7SUFDRjtJQUVBQyxVQUFVLE1BQU1HLElBQUFBLG9DQUFpQixFQUMvQkMsUUFBUUMsR0FBRyxDQUFDQyx3QkFBd0IsRUFDcENGLFFBQVFDLEdBQUcsQ0FBQ0UsOEJBQThCO0lBRzVDLE1BQU1DLGtCQUFrQixJQUFJQyw0Q0FBcUIsQ0FBQztRQUNoREMsYUFBYUMsSUFBQUEsNENBQXVCLEVBQUM7WUFDbkNDLGNBQWM7Z0JBQ1pDLFFBQVE7WUFDVjtZQUNBQyxnQkFBZ0JWLFFBQVFDLEdBQUcsQ0FBQ1Usc0NBQXNDO1lBQ2xFQyxRQUFRO2dCQUNOLENBQUMsQ0FBQyxvQ0FBb0MsRUFBRVosUUFBUUMsR0FBRyxDQUFDWSxrQ0FBa0MsQ0FBQyxDQUFDLENBQUMsRUFDdkZqQixRQUFRa0IsVUFBVSxHQUFHQyxXQUFXO1lBQ3BDO1FBQ0Y7SUFDRjtJQUVBLE1BQU1ULGNBQWMsTUFBTUYsZ0JBQWdCWSxNQUFNLENBQUNWLFdBQVc7SUFFNUQsbUJBQW1CO0lBQ25CVCxhQUFhUyxZQUFZVyxVQUFVO0lBRW5DdEIsZ0JBQWdCLElBQUl1QixVQUFJQyxFQUFFLENBQUM7UUFDekJiO1FBQ0FHLFFBQVFULFFBQVFDLEdBQUcsQ0FBQ21CLDJCQUEyQjtJQUNqRDtJQUVBLE9BQU87UUFDTHZCO1FBQ0FGO0lBQ0Y7QUFDRiJ9