"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "authAsCognitoUser", {
    enumerable: true,
    get: function() {
        return authAsCognitoUser;
    }
});
const _amazoncognitoidentityjs = require("amazon-cognito-identity-js");
let sessionAndToken = null;
const authAsCognitoUser = async (username, password)=>{
    // TODO: Check that isValid evaluates expiration
    if (sessionAndToken?.isValid()) {
        return sessionAndToken;
    }
    const userPool = new _amazoncognitoidentityjs.CognitoUserPool({
        ClientId: process.env.PAYLOAD_CLOUD_COGNITO_USER_POOL_CLIENT_ID,
        UserPoolId: process.env.PAYLOAD_CLOUD_COGNITO_USER_POOL_ID
    });
    const authenticationDetails = new _amazoncognitoidentityjs.AuthenticationDetails({
        Password: password,
        Username: username
    });
    const cognitoUser = new _amazoncognitoidentityjs.CognitoUser({
        Pool: userPool,
        Username: username
    });
    const result = await new Promise((resolve, reject)=>{
        cognitoUser.authenticateUser(authenticationDetails, {
            onFailure: (err)=>{
                reject(err);
            },
            onSuccess: (res)=>{
                resolve(res);
            }
        });
    });
    sessionAndToken = result;
    return sessionAndToken;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvYXV0aEFzQ29nbml0b1VzZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBDb2duaXRvVXNlclNlc3Npb24gfSBmcm9tICdhbWF6b24tY29nbml0by1pZGVudGl0eS1qcydcblxuaW1wb3J0IHsgQXV0aGVudGljYXRpb25EZXRhaWxzLCBDb2duaXRvVXNlciwgQ29nbml0b1VzZXJQb29sIH0gZnJvbSAnYW1hem9uLWNvZ25pdG8taWRlbnRpdHktanMnXG5cbmxldCBzZXNzaW9uQW5kVG9rZW46IENvZ25pdG9Vc2VyU2Vzc2lvbiB8IG51bGwgPSBudWxsXG5cbmV4cG9ydCBjb25zdCBhdXRoQXNDb2duaXRvVXNlciA9IGFzeW5jIChcbiAgdXNlcm5hbWU6IHN0cmluZyxcbiAgcGFzc3dvcmQ6IHN0cmluZyxcbik6IFByb21pc2U8Q29nbml0b1VzZXJTZXNzaW9uPiA9PiB7XG4gIC8vIFRPRE86IENoZWNrIHRoYXQgaXNWYWxpZCBldmFsdWF0ZXMgZXhwaXJhdGlvblxuICBpZiAoc2Vzc2lvbkFuZFRva2VuPy5pc1ZhbGlkKCkpIHtcbiAgICByZXR1cm4gc2Vzc2lvbkFuZFRva2VuXG4gIH1cblxuICBjb25zdCB1c2VyUG9vbCA9IG5ldyBDb2duaXRvVXNlclBvb2woe1xuICAgIENsaWVudElkOiBwcm9jZXNzLmVudi5QQVlMT0FEX0NMT1VEX0NPR05JVE9fVVNFUl9QT09MX0NMSUVOVF9JRCBhcyBzdHJpbmcsXG4gICAgVXNlclBvb2xJZDogcHJvY2Vzcy5lbnYuUEFZTE9BRF9DTE9VRF9DT0dOSVRPX1VTRVJfUE9PTF9JRCBhcyBzdHJpbmcsXG4gIH0pXG5cbiAgY29uc3QgYXV0aGVudGljYXRpb25EZXRhaWxzID0gbmV3IEF1dGhlbnRpY2F0aW9uRGV0YWlscyh7XG4gICAgUGFzc3dvcmQ6IHBhc3N3b3JkLFxuICAgIFVzZXJuYW1lOiB1c2VybmFtZSxcbiAgfSlcblxuICBjb25zdCBjb2duaXRvVXNlciA9IG5ldyBDb2duaXRvVXNlcih7XG4gICAgUG9vbDogdXNlclBvb2wsXG4gICAgVXNlcm5hbWU6IHVzZXJuYW1lLFxuICB9KVxuXG4gIGNvbnN0IHJlc3VsdDogQ29nbml0b1VzZXJTZXNzaW9uID0gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvZ25pdG9Vc2VyLmF1dGhlbnRpY2F0ZVVzZXIoYXV0aGVudGljYXRpb25EZXRhaWxzLCB7XG4gICAgICBvbkZhaWx1cmU6IChlcnIpID0+IHtcbiAgICAgICAgcmVqZWN0KGVycilcbiAgICAgIH0sXG4gICAgICBvblN1Y2Nlc3M6IChyZXMpID0+IHtcbiAgICAgICAgcmVzb2x2ZShyZXMpXG4gICAgICB9LFxuICAgIH0pXG4gIH0pXG5cbiAgc2Vzc2lvbkFuZFRva2VuID0gcmVzdWx0XG5cbiAgcmV0dXJuIHNlc3Npb25BbmRUb2tlblxufVxuIl0sIm5hbWVzIjpbImF1dGhBc0NvZ25pdG9Vc2VyIiwic2Vzc2lvbkFuZFRva2VuIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsImlzVmFsaWQiLCJ1c2VyUG9vbCIsIkNvZ25pdG9Vc2VyUG9vbCIsIkNsaWVudElkIiwicHJvY2VzcyIsImVudiIsIlBBWUxPQURfQ0xPVURfQ09HTklUT19VU0VSX1BPT0xfQ0xJRU5UX0lEIiwiVXNlclBvb2xJZCIsIlBBWUxPQURfQ0xPVURfQ09HTklUT19VU0VSX1BPT0xfSUQiLCJhdXRoZW50aWNhdGlvbkRldGFpbHMiLCJBdXRoZW50aWNhdGlvbkRldGFpbHMiLCJQYXNzd29yZCIsIlVzZXJuYW1lIiwiY29nbml0b1VzZXIiLCJDb2duaXRvVXNlciIsIlBvb2wiLCJyZXN1bHQiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImF1dGhlbnRpY2F0ZVVzZXIiLCJvbkZhaWx1cmUiLCJlcnIiLCJvblN1Y2Nlc3MiLCJyZXMiXSwibWFwcGluZ3MiOiI7Ozs7K0JBTWFBOzs7ZUFBQUE7Ozt5Q0FKdUQ7QUFFcEUsSUFBSUMsa0JBQTZDO0FBRTFDLE1BQU1ELG9CQUFvQixPQUMvQkUsVUFDQUM7SUFFQSxnREFBZ0Q7SUFDaEQsSUFBSUYsaUJBQWlCRyxXQUFXO1FBQzlCLE9BQU9IO0lBQ1Q7SUFFQSxNQUFNSSxXQUFXLElBQUlDLHdDQUFlLENBQUM7UUFDbkNDLFVBQVVDLFFBQVFDLEdBQUcsQ0FBQ0MseUNBQXlDO1FBQy9EQyxZQUFZSCxRQUFRQyxHQUFHLENBQUNHLGtDQUFrQztJQUM1RDtJQUVBLE1BQU1DLHdCQUF3QixJQUFJQyw4Q0FBcUIsQ0FBQztRQUN0REMsVUFBVVo7UUFDVmEsVUFBVWQ7SUFDWjtJQUVBLE1BQU1lLGNBQWMsSUFBSUMsb0NBQVcsQ0FBQztRQUNsQ0MsTUFBTWQ7UUFDTlcsVUFBVWQ7SUFDWjtJQUVBLE1BQU1rQixTQUE2QixNQUFNLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7UUFDN0ROLFlBQVlPLGdCQUFnQixDQUFDWCx1QkFBdUI7WUFDbERZLFdBQVcsQ0FBQ0M7Z0JBQ1ZILE9BQU9HO1lBQ1Q7WUFDQUMsV0FBVyxDQUFDQztnQkFDVk4sUUFBUU07WUFDVjtRQUNGO0lBQ0Y7SUFFQTNCLGtCQUFrQm1CO0lBRWxCLE9BQU9uQjtBQUNUIn0=