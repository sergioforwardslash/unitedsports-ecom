"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var deepMerge_1 = __importDefault(require("./deepMerge"));
var redirects = function (pluginConfig) {
    return function (incomingConfig) { return (__assign(__assign({}, incomingConfig), { collections: __spreadArray(__spreadArray([], ((incomingConfig === null || incomingConfig === void 0 ? void 0 : incomingConfig.collections) || []), true), [
            (0, deepMerge_1.default)({
                slug: 'redirects',
                admin: {
                    defaultColumns: ['from', 'to.type', 'createdAt'],
                },
                access: {
                    read: function () { return true; },
                },
                fields: [
                    {
                        name: 'from',
                        label: 'From URL',
                        index: true,
                        required: true,
                        type: 'text',
                    },
                    {
                        name: 'to',
                        label: false,
                        type: 'group',
                        fields: [
                            {
                                name: 'type',
                                label: 'To URL Type',
                                type: 'radio',
                                options: [
                                    {
                                        label: 'Internal link',
                                        value: 'reference',
                                    },
                                    {
                                        label: 'Custom URL',
                                        value: 'custom',
                                    },
                                ],
                                defaultValue: 'reference',
                                admin: {
                                    layout: 'horizontal',
                                },
                            },
                            {
                                name: 'reference',
                                label: 'Document to redirect to',
                                type: 'relationship',
                                relationTo: (pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.collections) || [],
                                required: true,
                                admin: {
                                    condition: function (_, siblingData) { return (siblingData === null || siblingData === void 0 ? void 0 : siblingData.type) === 'reference'; },
                                },
                            },
                            {
                                name: 'url',
                                label: 'Custom URL',
                                type: 'text',
                                required: true,
                                admin: {
                                    condition: function (_, siblingData) { return (siblingData === null || siblingData === void 0 ? void 0 : siblingData.type) === 'custom'; },
                                },
                            },
                        ],
                    },
                ],
            }, (pluginConfig === null || pluginConfig === void 0 ? void 0 : pluginConfig.overrides) || {}),
        ], false) })); };
};
exports.default = redirects;
//# sourceMappingURL=index.js.map